@page "/blog/blogs"
@using BlazorAppSecure.Model
@using BlazorAppSecure.Sevices
@using Microsoft.AspNetCore.Components.QuickGrid
@attribute [StreamRendering]

<h3>BlogList</h3>
@inject IBlogService _blogService
@inject NavigationManager _navigation

<div class="row">
    <div class="col-md-6"><h3 class="d-inline">Blog List - Basic </h3></div>
    <div class="col-md-6 text-end"><button class="d-inline btn btn-primary" @onclick="CreateBlog">Add Blog</button></div>
</div>


    <div>
        <QuickGrid Items="@blogs">
            <PropertyColumn Property="@(p => p.Name)" Sortable="true" />
            <PropertyColumn Property="@(p => p.Description)" Sortable="true" />
            <TemplateColumn Align="Align.Center" Title="Actions">
                <button class="btn btn-primary m-1" @onclick="() => EditContact(context.Id)">Edit</button>
                 <button class="btn btn-danger m-1" @onclick="() => ShowDeleteConfirmation(context.Id)">Delete</button>
             <button class="btn btn btn-success m-1" @onclick="() => ViewContact(context.Id)">View</button> 
            </TemplateColumn>
        </QuickGrid>
    </div>

    @if (showDeleteConfirmation)
    {
<div class="confirmation-modal">
    <h3>Confirm Deletion</h3>
    <p>Are you sure you want to delete this card?</p>
    <div>
        <AuthorizeView Roles="admin">
            <Authorized>
                <button @onclick="DeleteContact">Yes</button>
            </Authorized>
        </AuthorizeView>
        <button @onclick="CancelDelete">No</button>
    </div>
</div>
    }
@code {
    private IQueryable<BlogViewModel> blogs = null!;
    private int deleteId;
    private bool showDeleteConfirmation = false;

    protected async override Task OnInitializedAsync()
    {
        await LoadBlogs();
        base.OnInitializedAsync();
    }

    private async Task LoadBlogs()
    {
        var bloglist = await _blogService.GetAllAsync();
        blogs = bloglist.AsQueryable();
        StateHasChanged();
    }
    private void CreateBlog()
    {
        _navigation.NavigateTo($"/blogs/edit/0");
    }

    private void EditContact(int id)
    {
        _navigation.NavigateTo($"/blogs/edit/{id}");
    }


    private void ViewContact(int id)
    {
        _navigation.NavigateTo($"/blogdetails/{id}");
    }
    private void ShowDeleteConfirmation(int Id)
    {
        deleteId = Id;
        showDeleteConfirmation = true;
    }

    private void CloseConfirmationModal()
    {
        showDeleteConfirmation = false;
        deleteId = 0;
    }
    private async void DeleteContact()
    {
        await _blogService.DeleteAsync(deleteId);
        CloseConfirmationModal();
        await LoadBlogs();
    }


    private void CancelDelete()
    {
        CloseConfirmationModal();
    }

}
